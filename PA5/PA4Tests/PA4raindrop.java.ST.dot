digraph ASTGraph {
	node [shape=record];
	graph [ rankdir="LR"];
	scopeinBounds [ label="<f0> Scope inBounds | <f1> mDict\[y\] | <f2> mDict\[x\] "];
	scopeinBounds:<f1> -> y:<f0>;
	scopeinBounds:<f2> -> x:<f0>;

	y [ label=" <f0> VarSTE | <f1> mName = y| <f2> mType = BYTE| <f3> mBase = INVALID| <f4> mOffset = 0"];

	x [ label=" <f0> VarSTE | <f1> mName = x| <f2> mType = BYTE| <f3> mBase = INVALID| <f4> mOffset = 0"];
	
	scoperain [ label="<f0> Scope rain | <f1> mDict\[y\] | <f2> mDict\[x\] "];
	scoperain:<f1> -> y:<f0>;
	scoperain:<f2> -> x:<f0>;

	y [ label=" <f0> VarSTE | <f1> mName = y| <f2> mType = BYTE| <f3> mBase = INVALID| <f4> mOffset = 0"];

	x [ label=" <f0> VarSTE | <f1> mName = x| <f2> mType = BYTE| <f3> mBase = INVALID| <f4> mOffset = 0"];
	
	scopeCloud [ label="<f0> Scope Cloud | <f1> mDict\[inBounds\] | <f2> mDict\[rain\] "];
	scopeCloud:<f1> -> inBounds:<f0>;
	scopeCloud:<f2> -> rain:<f0>;

	inBounds [ label=" <f0> MethodSTE | <f1> mName = inBounds| <f2> mSignature = (ByteType ByteType ) return BoolType| <f3> mScope "];

	rain [ label=" <f0> MethodSTE | <f1> mName = rain| <f2> mSignature = (ByteType ByteType ) return VoidType| <f3> mScope "];
	
	inBounds:<f3> -> scopeinBounds:<f0>;
	rain:<f3> -> scoperain:<f0>;
	scopePA4raindrop [ label="<f0> Scope PA4raindrop "];
	
	scopeProgram [ label="<f0> Scope Program | <f1> mDict\[Cloud\] | <f2> mDict\[PA4raindrop\] "];
	scopeProgram:<f1> -> Cloud:<f0>;
	scopeProgram:<f2> -> PA4raindrop:<f0>;

	Cloud [ label=" <f0> ClassSTE | <f1> mName=Cloud| <f2> mMain=false| <f3> mSuperClass = NULL | <f4> mScope "];

	PA4raindrop [ label=" <f0> ClassSTE | <f1> mName=PA4raindrop| <f2> mMain=true| <f3> mSuperClass = NULL | <f4> mScope "];
	
	Cloud:<f4>  -> scopeCloud: <f0>;
	PA4raindrop:<f4>  -> scopePA4raindrop: <f0>;
}
